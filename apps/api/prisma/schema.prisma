generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String               @id @default(uuid())
  email         String               @unique
  createdAt     DateTime             @default(now())
  subs          String[]
  name          String
  organizations OrganizationMember[]
  sessions      Session[]
}

model Session {
  id           String   @id @default(uuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  createdAt    DateTime @default(now())
  accessToken  String
  refreshToken String
}

model Organization {
  id          String               @id @default(uuid())
  name        String               @unique
  slug        String               @unique
  createdAt   DateTime             @default(now())
  type        OrganizationType
  application Application[]
  invites     OrganizationInvite[]
  members     OrganizationMember[]
}

model OrganizationMember {
  organizationId String
  userId         String
  role           Role
  joinedAt       DateTime
  organization   Organization @relation(fields: [organizationId], references: [id])
  user           User         @relation(fields: [userId], references: [id])

  @@id([organizationId, userId])
}

model OrganizationInvite {
  organizationId String
  createdAt      DateTime     @default(now())
  email          String
  acceptedAt     DateTime?
  organization   Organization @relation(fields: [organizationId], references: [id])

  @@id([organizationId, email])
}

model Application {
  id             String       @id @default(uuid())
  name           String       @unique
  organizationId String
  createdAt      DateTime     @default(now())
  organization   Organization @relation(fields: [organizationId], references: [id])
  deployments    Deployment[]
}

model Chain {
  id          Int          @id
  name        String
  label       String       @unique
  testnet     Boolean
  enabled     Boolean
  deployments Deployment[]
}

model Deployment {
  id              String           @id @default(uuid())
  createdAt       DateTime         @default(now())
  applicationId   String
  chainId         Int
  contractAddress String
  machineSnapshot String
  status          DeploymentStatus
  application     Application      @relation(fields: [applicationId], references: [id])
  chain           Chain            @relation(fields: [chainId], references: [id])
}

enum OrganizationType {
  PERSONAL
  SHARED
}

enum Role {
  USER
  ADMIN
}

enum DeploymentStatus {
  STARTING
  READY
  FAILED
}
